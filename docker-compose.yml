

# Load environment variables from .env file
# This ensures FOGIS credentials and other configuration are properly loaded
x-env-file: &env-file
  env_file:
    - .env

services:
  # FOGIS API Client Service - centralized API access
  fogis-api-client-service:
    image: ghcr.io/pitchconnect/fogis-api-client-python:latest
    container_name: fogis-api-client-service
    <<: *env-file
    environment:
      - FOGIS_USERNAME=${FOGIS_USERNAME}
      - FOGIS_PASSWORD=${FOGIS_PASSWORD}
      - FLASK_DEBUG=${DEBUG_MODE:-0}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data/fogis-api-client:/app/data
      - ./logs/fogis-api-client:/app/logs
    ports:
      - "${API_CLIENT_PORT:-9086}:8080"  # API endpoint
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Match list processor - unified service with enhanced error handling and logging (v2.1.0)
  process-matches-service:
    image: ghcr.io/pitchconnect/match-list-processor:latest
    container_name: process-matches-service
    command: ["python", "-m", "src.app_unified"]  # Use unified processor mode
    environment:
      - PROCESSOR_MODE=unified                    # Enable unified processor mode
      - RUN_MODE=service                         # Run as persistent service with periodic processing
      - ENABLE_CHANGE_CATEGORIZATION=true       # Enable enhanced change detection
      - SERVICE_INTERVAL=3600                    # Processing interval (1 hour) between match checks
      - FOGIS_API_CLIENT_URL=http://fogis-api-client-service:8080
      - CALENDAR_SYNC_URL=http://fogis-calendar-phonebook-sync:5003/sync
      - LOGO_COMBINER_URL=http://team-logo-combiner:5000/combine
      - GOOGLE_DRIVE_URL=http://google-drive-service:5000
      - LOG_LEVEL=INFO
      - FORCE_FRESH_PROCESSING=false            # Disable for event-driven processing
      # Notification System Configuration
      - NOTIFICATIONS_ENABLED=${NOTIFICATIONS_ENABLED}
      - EMAIL_ENABLED=${EMAIL_ENABLED}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_USE_TLS=${SMTP_USE_TLS}
      - DISCORD_ENABLED=${DISCORD_ENABLED}
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - DISCORD_BOT_USERNAME=${DISCORD_BOT_USERNAME}
      # Enhanced Error Handling and Logging Configuration (v2.1.0)
      - LOG_ENABLE_CONSOLE=true                 # Enable console logging
      - LOG_ENABLE_FILE=true                    # Enable file logging for production
      - LOG_ENABLE_STRUCTURED=true              # Enable structured logging with context
      - LOG_DIR=/app/logs                       # Log directory for file output
      - LOG_FILE=match-list-processor.log       # Log file name
    volumes:
      - ./data/process-matches-service:/app/data
      - ./logs/process-matches-service:/app/logs
      - ./data/stakeholders.json:/app/data/stakeholders.json:ro
      - ./match-list-processor/config/notification_channels.yml:/app/config/notification_channels.yml:ro
    ports:
      - "9082:8000"  # Health and API endpoints
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/simple"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      fogis-api-client-service:
        condition: service_healthy
      fogis-calendar-phonebook-sync:
        condition: service_healthy
      team-logo-combiner:
        condition: service_healthy
      google-drive-service:
        condition: service_healthy

  # Calendar and phonebook synchronization service
  fogis-calendar-phonebook-sync:
    image: ghcr.io/pitchconnect/fogis-calendar-phonebook-sync:latest
    container_name: fogis-calendar-phonebook-sync
    <<: *env-file
    networks:
      fogis-network:
        aliases:
          - fogis-sync  # Alias for backward compatibility
    environment:
      - FOGIS_USERNAME=${FOGIS_USERNAME}
      - FOGIS_PASSWORD=${FOGIS_PASSWORD}
      - USER_REFEREE_NUMBER=${USER_REFEREE_NUMBER:-12345}
      - GOOGLE_CREDENTIALS_PATH=/app/credentials/google-credentials.json
      - GOOGLE_CALENDAR_TOKEN_FILE=/app/data/google-calendar/token.json
      - LOG_LEVEL=INFO
      - FLASK_HOST=0.0.0.0  # Bind to all interfaces for inter-container communication
      - FLASK_PORT=5003     # Explicit port configuration matching app default
      # Enhanced Error Handling and Logging Configuration (v2.1.0)
      - LOG_ENABLE_CONSOLE=true                 # Enable console logging
      - LOG_ENABLE_FILE=true                    # Enable file logging for production
      - LOG_ENABLE_STRUCTURED=true              # Enable structured logging with context
      - LOG_DIR=/app/logs                       # Log directory for file output
      - LOG_FILE=fogis-calendar-phonebook-sync.log  # Log file name
    volumes:
      - ./data/fogis-calendar-phonebook-sync:/app/data
      - ./logs/fogis-calendar-phonebook-sync:/app/logs
      - ./credentials:/app/credentials:ro
      - ./data/fogis-calendar-phonebook-sync/google-calendar:/app/data/google-calendar
      - ../fogis-calendar-phonebook-sync/token.json:/app/token.json:ro  # Contacts OAuth token
    ports:
      - "9083:5003"  # API endpoint
      - "9084:8080"  # Auth server endpoint
      - "9087:8090"  # Auth web trigger endpoint
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Team logo combination service
  team-logo-combiner:
    image: ghcr.io/pitchconnect/team-logo-combiner:latest
    container_name: team-logo-combiner
    environment:
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
      # Enhanced Error Handling and Logging Configuration (v2.1.0)
      - LOG_ENABLE_CONSOLE=true                 # Enable console logging
      - LOG_ENABLE_FILE=true                    # Enable file logging for production
      - LOG_ENABLE_STRUCTURED=true              # Enable structured logging with context
      - LOG_DIR=/app/logs                       # Log directory for file output
      - LOG_FILE=team-logo-combiner.log         # Log file name
    volumes:
      - ./data/team-logo-combiner:/app/data
      - ./logs/team-logo-combiner:/app/logs
    ports:
      - "9088:5002"  # API endpoint (corrected port)
    networks:
      fogis-network:
        aliases:
          - whatsapp-avatar-service  # Allow access by both names
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Google Drive service for file management
  google-drive-service:
    image: ghcr.io/pitchconnect/google-drive-service:latest
    container_name: google-drive-service
    environment:
      - GOOGLE_CREDENTIALS_PATH=/app/credentials/google-credentials.json
      - LOG_LEVEL=INFO
      - FLASK_HOST=0.0.0.0  # Fix: Bind to all interfaces for inter-container communication
      - FLASK_PORT=5000     # Explicit port configuration
      # Enhanced Error Handling and Logging Configuration (v2.1.0)
      - LOG_ENABLE_CONSOLE=true                 # Enable console logging
      - LOG_ENABLE_FILE=true                    # Enable file logging for production
      - LOG_ENABLE_STRUCTURED=true              # Enable structured logging with context
      - LOG_DIR=/app/logs                       # Log directory for file output
      - LOG_FILE=google-drive-service.log       # Log file name
    volumes:
      - ./data/google-drive-service:/app/data
      - ./logs/google-drive-service:/app/logs
      - ./credentials:/app/credentials:ro
    ports:
      - "9085:5000"  # API endpoint
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Centralized Logging Infrastructure
  loki:
    image: grafana/loki:2.9.0
    container_name: fogis-loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki:/loki
      - ./monitoring/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  promtail:
    image: grafana/promtail:2.9.0
    container_name: fogis-promtail
    volumes:
      - ./logs:/var/log/fogis:ro
      - ./monitoring/promtail-config.yaml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - fogis-network
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy

  grafana:
    image: grafana/grafana:10.0.0
    container_name: fogis-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - fogis-network
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # fogis-event-collector:
  #   image: ghcr.io/pitchconnect/fogis-event-collector:latest
  #   container_name: fogis-event-collector
  #   ports:
  #     - "9090:8080"
  #   environment:
  #     - LOKI_URL=http://loki:3100
  #     - WEBHOOK_ENDPOINTS=${EXTERNAL_WEBHOOK_ENDPOINTS:-}
  #     - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
  #     - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL:-}
  #     - TEAMS_WEBHOOK_URL=${TEAMS_WEBHOOK_URL:-}
  #     - LOG_LEVEL=${LOG_LEVEL:-INFO}
  #   volumes:
  #     - ./monitoring/event-collector-config.yaml:/app/config.yaml
  #     - ./logs/event-collector:/app/logs
  #   networks:
  #     - fogis-network
  #   restart: unless-stopped
  #   depends_on:
  #     loki:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

  # Redis pub/sub infrastructure for real-time communication
  redis:
    image: redis:7-alpine
    container_name: fogis-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - fogis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    environment:
      - REDIS_REPLICATION_MODE=master

networks:
  fogis-network:
    driver: bridge

volumes:
  match-list-data:
  processor-data:
  calendar-data:
  logo-data:
  drive-data:
  grafana-storage:
  redis-data:
    driver: local
