

# Load environment variables from .env file
# This ensures FOGIS credentials and other configuration are properly loaded
x-env-file: &env-file
  env_file:
    - .env

services:
  # FOGIS API Client Service - centralized API access
  fogis-api-client-service:
    image: ghcr.io/pitchconnect/fogis-api-client:latest
    container_name: fogis-api-client-service
    <<: *env-file
    environment:
      - FOGIS_USERNAME=${FOGIS_USERNAME}
      - FOGIS_PASSWORD=${FOGIS_PASSWORD}
      - FLASK_DEBUG=${DEBUG_MODE:-0}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data/fogis-api-client:/app/data
      - ./logs/fogis-api-client:/app/logs
    ports:
      - "${API_CLIENT_PORT:-9086}:8080"  # API endpoint
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Core orchestration service - runs as persistent service with internal scheduling
  match-list-change-detector:
    # image: ghcr.io/pitchconnect/match-list-change-detector:latest
    build:
      context: local-patches/match-list-change-detector
      dockerfile: Dockerfile.patched
    container_name: match-list-change-detector
    <<: *env-file
    environment:
      - FOGIS_USERNAME=${FOGIS_USERNAME}
      - FOGIS_PASSWORD=${FOGIS_PASSWORD}
      - FOGIS_API_CLIENT_URL=http://fogis-api-client-service:8080
      - HEALTH_SERVER_PORT=8080
      - HEALTH_SERVER_HOST=0.0.0.0
      - PROMETHEUS_PORT=8081
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://match-list-processor:8000/process}
      - RUN_MODE=service
      - CRON_SCHEDULE=${MATCH_DETECTOR_CRON_SCHEDULE:-0 * * * *}
    volumes:
      - ./data/match-list-change-detector:/app/data
      - ./logs/match-list-change-detector:/app/logs
    ports:
      - "${MATCH_DETECTOR_PORT:-9080}:8080"  # Health check endpoint
      - "9081:8081"  # Prometheus metrics
    networks:
      - fogis-network
    restart: unless-stopped
    depends_on:
      fogis-api-client-service:
        condition: service_healthy
      match-list-processor:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Cron-like scheduling using restart policy and external cron
    labels:
      - "cron.schedule=0 * * * *"  # Every hour
      - "cron.command=python main.py"

  # Match list processor - event-driven service waiting for webhook triggers
  match-list-processor:
    image: ghcr.io/pitchconnect/match-list-processor:latest
    # build:
    #   context: local-patches/match-list-processor
    #   dockerfile: Dockerfile.patched
    container_name: match-list-processor
    command: ["python", "-m", "src.app_persistent"]  # Use persistent service mode to prevent restart loop
    environment:
      - FOGIS_API_CLIENT_URL=http://fogis-api-client-service:8080
      - CALENDAR_SYNC_URL=http://fogis-calendar-phonebook-sync:5003/sync
      - LOGO_COMBINER_URL=http://team-logo-combiner:5000/combine
      - GOOGLE_DRIVE_URL=http://google-drive-service:5000
      - LOG_LEVEL=INFO
      - FORCE_FRESH_PROCESSING=false  # Disable for event-driven processing
      - RUN_MODE=service              # Run as persistent service with periodic processing
      - SERVICE_INTERVAL=3600         # Processing interval (1 hour) between match checks
    volumes:
      - ./data/match-list-processor:/app/data
      - ./logs/match-list-processor:/app/logs
    ports:
      - "9082:8000"  # Health and webhook endpoints
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      fogis-api-client-service:
        condition: service_healthy
      fogis-calendar-phonebook-sync:
        condition: service_healthy
      team-logo-combiner:
        condition: service_healthy
      google-drive-service:
        condition: service_healthy

  # Calendar and phonebook synchronization service
  fogis-calendar-phonebook-sync:
    image: ghcr.io/pitchconnect/fogis-calendar-phonebook-sync:latest
    container_name: fogis-calendar-phonebook-sync
    <<: *env-file
    networks:
      fogis-network:
        aliases:
          - fogis-sync  # Alias for backward compatibility
    environment:
      - FOGIS_USERNAME=${FOGIS_USERNAME}
      - FOGIS_PASSWORD=${FOGIS_PASSWORD}
      - USER_REFEREE_NUMBER=${USER_REFEREE_NUMBER:-12345}
      - GOOGLE_CREDENTIALS_PATH=/app/credentials/google-credentials.json
      - LOG_LEVEL=INFO
      - FLASK_HOST=0.0.0.0  # Bind to all interfaces for inter-container communication
      - FLASK_PORT=5003     # Explicit port configuration matching app default
    volumes:
      - ./data/fogis-calendar-phonebook-sync:/app/data
      - ./logs/fogis-calendar-phonebook-sync:/app/logs
      - ./credentials:/app/credentials:ro
    ports:
      - "9083:5003"  # API endpoint
      - "9084:8080"  # Auth server endpoint
      - "9087:8090"  # Auth web trigger endpoint
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Team logo combination service
  team-logo-combiner:
    image: ghcr.io/pitchconnect/team-logo-combiner:latest
    container_name: team-logo-combiner
    environment:
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
    volumes:
      - ./data/team-logo-combiner:/app/data
      - ./logs/team-logo-combiner:/app/logs
    ports:
      - "9088:5002"  # API endpoint (corrected port)
    networks:
      fogis-network:
        aliases:
          - whatsapp-avatar-service  # Allow access by both names
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Google Drive service for file management
  google-drive-service:
    image: ghcr.io/pitchconnect/google-drive-service:latest
    container_name: google-drive-service
    environment:
      - GOOGLE_CREDENTIALS_PATH=/app/credentials/google-credentials.json
      - LOG_LEVEL=INFO
      - FLASK_HOST=0.0.0.0  # Fix: Bind to all interfaces for inter-container communication
      - FLASK_PORT=5000     # Explicit port configuration
    volumes:
      - ./data/google-drive-service:/app/data
      - ./logs/google-drive-service:/app/logs
      - ./credentials:/app/credentials:ro
    ports:
      - "9085:5000"  # API endpoint
    networks:
      - fogis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s



networks:
  fogis-network:
    driver: bridge

volumes:
  match-list-data:
  processor-data:
  calendar-data:
  logo-data:
  drive-data:
