---
# FOGIS Deployment - Ansible Playbook
# Generated from fogis-config.yaml

- name: Deploy FOGIS System
  hosts: fogis_servers
  become: yes
  vars:
    fogis_user: "{{ ansible_user }}"
    fogis_home: "/home/{{ fogis_user }}/fogis-deployment"
    docker_compose_version: "2.21.0"

  tasks:
    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - git
          - python3
          - python3-pip
          - python3-venv
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add user to docker group
      user:
        name: "{{ fogis_user }}"
        groups: docker
        append: yes

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Create FOGIS directory
      file:
        path: "{{ fogis_home }}"
        state: directory
        owner: "{{ fogis_user }}"
        group: "{{ fogis_user }}"
        mode: '0755'

    - name: Clone FOGIS repository
      git:
        repo: "{{ fogis_repo_url }}"
        dest: "{{ fogis_home }}"
        version: "{{ fogis_repo_branch | default('main') }}"
        force: yes
      become_user: "{{ fogis_user }}"

    - name: Copy FOGIS configuration
      template:
        src: fogis-config.yaml.j2
        dest: "{{ fogis_home }}/fogis-config.yaml"
        owner: "{{ fogis_user }}"
        group: "{{ fogis_user }}"
        mode: '0644'
      become_user: "{{ fogis_user }}"

    - name: Copy OAuth credentials
      copy:
        src: "{{ oauth_credentials_file }}"
        dest: "{{ fogis_home }}/credentials.json"
        owner: "{{ fogis_user }}"
        group: "{{ fogis_user }}"
        mode: '0600'
      become_user: "{{ fogis_user }}"
      when: oauth_credentials_file is defined

    - name: Generate FOGIS configuration files
      command: ./manage_fogis_system.sh config-generate
      args:
        chdir: "{{ fogis_home }}"
      become_user: "{{ fogis_user }}"

    - name: Start FOGIS services
      command: docker compose up -d
      args:
        chdir: "{{ fogis_home }}"
      become_user: "{{ fogis_user }}"

    - name: Wait for services to be ready
      wait_for:
        port: "{{ item }}"
        host: localhost
        delay: 10
        timeout: 300
      loop:
        - 9083
        - 9085

    - name: Create systemd service for FOGIS
      template:
        src: fogis.service.j2
        dest: /etc/systemd/system/fogis.service
        mode: '0644'
      notify: reload systemd

    - name: Enable FOGIS service
      systemd:
        name: fogis
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes
